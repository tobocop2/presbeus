#!/usr/bin/env ruby
require 'rest-client'
require 'json'
require 'yaml'
require 'time_ago_in_words'
require 'terminal-table'
require 'highline'
require 'colorize'

class Presbeus

  def initialize
    configuration_path = "#{ENV['HOME']}/.config/presbeus.yml"
    configuration = YAML.load_file configuration_path
    token = `#{configuration['password_command']}`
    @headers = {"Access-Token" => token}
  end

  def get_v2 what
    response = RestClient.get(
      'https://api.pushbullet.com/v2/' + what, @headers)
    JSON.parse response.body
  end

  def devices
    get_v2("devices")["devices"].map do |device|
      [device["iden"], device["model"]]
    end
  end

  def threads iden
    get_v2("permanents/#{iden}_threads")["threads"].reverse.map do |thread|
      require 'awesome_print'
      [thread["id"]] + thread["recipients"].map { |r| [r["address"], r["name"]] }.flatten
    end
  end

  def thread device, id
    get_v2("permanents/#{device}_thread_#{id}")["thread"]
  end

  def user_iden
    get_v2("users/me")["iden"]
  end

  def send_sms device, conversation_iden, message
    RestClient.post(
      'https://api.pushbullet.com/v2/ephemerals',
      {
        push: {
          conversation_iden: conversation_iden,
          message: message,
          package_name: "com.pushbullet.android",
          source_user_iden: user_iden,
          target_device_iden: device,
          type: "messaging_extension_reply"
        },
        type: "push"
      }.to_json,
      @headers)
  end

  def table rows, config = {}
    t = Terminal::Table.new config.merge({:rows => rows})
    t.style = { border_top: false, border_bottom: false, border_y: '' }
    puts t
  end

  def wrap s, width
    s.gsub(/(.{1,#{width}})(\s+|\Z)/, "\\1\n")
  end

  def with_color string, width, background
    lines = string.split("\n")
    lines.map { |line| line.ljust(width).colorize(color: :black, background: background)}.join "\n"
  end

  def thread_with_two_columns_wrap device, id
    width = HighLine::SystemExtensions.terminal_size[0] / 2 - 4
    res = []
    thread(device, id).reverse.each do |message|
        text = [wrap(message["body"], width), ""]
        date = ["\n#{Time.at(message["timestamp"]).ago_in_words}", ""]
        if message["direction"] != "incoming"
          text[0] = with_color text[0], width, :white
          text.reverse!
          date.reverse!
        else
          text[0] = with_color text[0], width, :green
        end
        res << date
        res << text
    end
    res 
  end

  def run command
    case command[0]
    when "devices"
      puts table devices
    when "threads"
      puts table threads command[1]
    when "thread"
      puts table thread_with_two_columns_wrap command[1], command[2]
    when "sms"
      send_sms command[1], command[2], command[3..-1].join(" ")
    end
  end

end

Presbeus.new.run ARGV
